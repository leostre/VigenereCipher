using Microsoft.VisualStudio.TestTools.UnitTesting;
using basementOfKursach;

namespace Tester
{
    [TestClass]
    public class EncryptorTests
    {
        const string startText = "В настоящий момент Illumina предлагает продукты для секвенирования, генетического анализа, анализа однонуклеотидных полиморфизмов, экспрессии генов и белков, в том числе и с использованием технологии ДНК-микрочипов. 26 января 2007 года Illumina приобрела компанию Solexa, Inc, которая разрабатывает продукты для генетического анализа, в том числе для полного секвенирование генома, анализа экспрессии генов и анализа малых РНК. В конце 2014 году представила платформу для секвенирования полного генома человека с стоимостью реактивов около $1000 - Illumina X Ten.";

        [TestMethod]
        public void Encrypt_test()
        {
            //Arrange
            string expectedA = "в настоящий момент Illumina предлагает продукты для секвенирования, генетического анализа, анализа однонуклеотидных полиморфизмов, экспрессии генов и белков, в том числе и с использованием технологии днк-микрочипов. 26 января 2007 года Illumina приобрела компанию Solexa, Inc, которая разрабатывает продукты для генетического анализа, в том числе для полного секвенирование генома, анализа экспрессии генов и анализа малых рнк. в конце 2014 году представила платформу для секвенирования полного генома человека с стоимостью реактивов около $1000 - Illumina X Ten.";
            string expectedVirgo = "ё твсцубщмо оорйпт Illumina ухждпееаич сртихкца ёлг цжкёйпифудаснб, гитжтмьжсоуео дтвлммв, асениле рдсупуоржоцнёняъ сопноофщкзруд, эоцсрицуим зжнтж к бирмоё, ж фор ькспй к с мцсопбйоёепиис фещтрлтзки зтм-ммптоынсоё. 26 дпвдхб 2007 гтив Illumina пфнрбфйна оуопдткю Solexa, Inc, оуфофеб рдмтаеефыёежт ухрдчпфы зрб гитжтмьжсоуео дтвлммв, в цуо чмцне зрб птрпожу уеожжнмхрвдтке жйпоре, вндркзд вмсухжсхнк гитрв м епапнйа реныщ хпк. ё прнъй 2014 еозш срииутджклд фнацщрррш ёлг цжкёйпифудаснб птрпожу еесуоа ыйноёйма х цфомсрсцба риемтмжрв тпрлт $1000 - Illumina X Ten.";
            string expectedCapricorn = "м ьзцгэвдчс сяызшб Illumina чххтоксзйг юущтыпгй жцн щйырзшчшуторун, кйюухуёмцыэёщ охеьчкк, охеьчкк элтяьцхъмугчжшйэ фяълчэшщщцпщр, епвюупащнщ сзшэй н суохэй, ж гэп вчщрх ч ф уачуьккщрзтщуп эуэтяъснчр иющ-пущшузчтщр. 26 жттоуй 2007 сцир Illumina юууэиххъг хэффрьли Solexa, Inc, щцчяягй язмбодкбгжрух ъяцидщхё туд уурпбрьханщсц еюооуцз, ж гэп вчщрх той юцрюэёщ амптуруяцжрьлп смтяыг, кьзрщцг зщщфбуфьчр зхьсм ч зтрълто феьйш ыьт. ж ыэрбу 2014 куфв тыулцгоеуъз фьохяэшсд той амптуруяцжрьлй юцрюэёщ смтяыг вууутунк а щчячпщаъбо язкщънтэе щщцря $1000 - Illumina X Ten.";
            Encryptor encryptor = new Encryptor(startText);

            //Act
            string actualA = encryptor.Encrypt("а");
            string actualVirgo = encryptor.Encrypt("дева");
            string actualCapricorn = encryptor.Encrypt("козерог");

            //Assert
            Assert.AreEqual(expectedA, actualA, "A's wrong!");
            Assert.AreEqual(expectedVirgo, actualVirgo, "Virgo's wrong!");
            Assert.AreEqual(expectedCapricorn, actualCapricorn, "Capricorn's wrong!");
        }
        [TestMethod]
        public void Encrypt_EmptyKey_Test()
        {
            //Arrange
            Encryptor encryptor = new Encryptor(startText);
            string expectedEmpty = "у шоввчнжъф ыяьньа Illumina быуфыиснцэ юбюмвшдё тьо ъушупьщачрняун, уфцуаъвувъчсь сшоьшро, някъщчи эсящьдъфуьдутюкю юьэуыяаэчхющр, нъъююцьащш луыам ч сффщьу, м бяь ачяэп ч в шъюьэжцясиьццч бхецэщанчщ уцщ-ъъхяяжсюьу. 26 йьтпщн 2007 раоо Illumina аасэовпър ъчыэсшчо Solexa, Inc, ъчбьвкн бпрянткблсиуа быэфгуби хцн уфцуаъвувъчсь сшоьшро, п дщы зшъът хцн аюфььфщ ахъкуыъыэтпцчт фпьяьи, оысцчшп ёщябыувбсч рцшэт ш иьнэуцр ьиъиж ыьы. с уэызп 2014 сяуь ююцоагпкчщс ъървээююю тьо ъушупьщачрняун аюфььфщ схэчын ипъяснщн г ьбяшхэяджм бфищаъмэт юуэща $1000 - Illumina X Ten.";



            //Act
            string actEmpty = encryptor.Encrypt("");

            //assert
            Assert.AreEqual(expectedEmpty, actEmpty, "Wrong behavior in case of an empty key!");

        }
    }
}